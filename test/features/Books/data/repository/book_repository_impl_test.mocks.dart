// Mocks generated by Mockito 5.0.15 from annotations
// in library_project/test/features/Books/data/repository/book_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:library_project/unilib/core/Data/platforms/connectivity/connectivity_contract.dart'
    as _i6;
import 'package:library_project/unilib/features/books/Data/data_sources/local_dataSources/local_book_source.dart'
    as _i5;
import 'package:library_project/unilib/features/books/Data/data_sources/remote_dataSources/remote_book_source.dart'
    as _i2;
import 'package:library_project/unilib/features/books/Data/Models/book_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [RemoteBookSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteBookSource extends _i1.Mock implements _i2.RemoteBookSource {
  MockRemoteBookSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.BookModels>> call() => (super.noSuchMethod(
          Invocation.method(#call, []),
          returnValue: Future<List<_i4.BookModels>>.value(<_i4.BookModels>[]))
      as _i3.Future<List<_i4.BookModels>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LocalBookSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalBookSource extends _i1.Mock implements _i5.LocalBookSource {
  MockLocalBookSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.BookModels>> retrieveBooks() => (super.noSuchMethod(
          Invocation.method(#retrieveBooks, []),
          returnValue: Future<List<_i4.BookModels>>.value(<_i4.BookModels>[]))
      as _i3.Future<List<_i4.BookModels>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i6.NetworkStatus> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue:
                  Future<_i6.NetworkStatus>.value(_i6.NetworkStatus.mobile))
          as _i3.Future<_i6.NetworkStatus>);
  @override
  String toString() => super.toString();
}
